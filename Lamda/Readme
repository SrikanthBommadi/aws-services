what is serverless
1)server less is no need of running the servers (ec2)
Serverless is a cloud computing execution model where the cloud provider dynamically manages the allocation and provisioning of servers. A serverless application runs in stateless compute containers that are event-triggered, ephemeral (may last for one invocation), and fully managed by the cloud provider. Pricing is based on the number of executions rather than pre-purchased compute capacity.

-------------------------------------------
use =
The difference between traditional cloud computing and serverless is that you, the customer who requires the computing, doesn‚Äôt pay for underutilized resources. Instead of spinning up a server in AWS for example, you‚Äôre just spinning up some code execution time. The serverless computing service takes your functions as input, performs logic, returns your output, and then shuts down. You are only billed for the resources used during the execution of those functions.

----------------------------------------------

| Service                   | Serverless? | Why / Why Not                                                          |
| ------------------------- | ----------- | ---------------------------------------------------------------------- |
| **S3**                    | ‚úÖ Yes       | No server mgmt, auto-scaling, pay-per-use                              |
| **DynamoDB**              | ‚úÖ Yes       | No server mgmt, on-demand scaling, pay-per-use                         |
| **RDS**                   | ‚ùå No        | Requires provisioning, scaling, patching; pricing not usage-based      |
| **RDS Aurora Serverless** | ‚úÖ Yes       | Auto-scaling, no server mgmt, usage-based billing                      |
| **EFS**                   | ‚ùå Mostly No | Requires EC2 mount, some server mgmt, but storage scales automatically |
| **EBS**                   | ‚ùå No        | Requires provisioning, attached to EC2, no auto-scaling                |
----------------------------------------------------------------------------------------------------------------------
lamda-
no ip-address as a ec2
cant see the autoscale like server
-----------------------------------------------------

<!-- üöÄ How AWS Lambda Can Be Used at Air Canada -->

<!-- 1. Flight Operations & Scheduling Automation -->
Lambda can be used to trigger processes based on events, like:
Changes in flight schedules (delays, cancellations).
Automatically updating internal databases or notifying staff.
Triggering updates to flight information displays at airports.
S3 receives updated flight schedule CSV ‚Üí Lambda processes it ‚Üí Updates DynamoDB or RDS ‚Üí Sends SNS alerts to crew.
------------------------------------------------------

<!-- 2. Customer Notifications & Communication -->
Automate SMS/email push notifications to passengers:

Gate changes.
Boarding calls.
Delay announcements.
Lambda Flow:
Event from a system (e.g., a delay).
Lambda sends message via Amazon SNS or integrates with third-party comms API.
-------------------------------------------------------------
<!-- 2. Customer Notifications & Communication -->
Automate SMS/email push notifications to passengers:

Gate changes.
Boarding calls.
Delay announcements.
Lambda Flow:
Event from a system (e.g., a delay).
Lambda sends message via Amazon SNS or integrates with third-party comms API.

EventBridge (flight delay detected)
       ‚Üì
   AWS Lambda
       ‚Üì
 Amazon SNS (SMS/Email Push)
       ‚Üì
Passenger Mobile Notification

----------------------------------------------------------

<!-- 4. Security & Compliance Automation -->
In the aviation industry, compliance is critical. Lambda can be used for:

Automated log monitoring.

Running compliance checks on configurations (e.g., via AWS Config + Lambda).

Detecting and correcting misconfigured resources.
------------------------------------------------------------------------

<!-- 5. Cost Optimization -->
Lambda can regularly audit and clean up:

Unused EBS volumes

Old AMIs

Idle resources

Run these as scheduled functions using Amazon EventBridge (CloudWatch Events).

------------------------------------------------------------------------------------

| Task             | Tool                | Lambda Role               |
| ---------------- | ------------------- | ------------------------- |
| Resource tagging | CloudTrail + Lambda | Auto-tag & alert          |
| Cost tracking    | Cost Explorer API   | Daily usage reports       |
| Budget alerts    | AWS Budgets         | Trigger alert/remediation |
| Idle cleanup     | Scheduler + Lambda  | Stop unused EC2/S3/etc    |
| Build cost       | Jenkins + Lambda    | Tag & monitor per build   |
-----------------------------------------------------------------------------------------
[Customer App or Website]
        ‚Üì
 Enters Promo Code
        ‚Üì
[API Gateway]
        ‚Üì
[AWS Lambda]
        ‚Üì
[DynamoDB / RDS] ‚Üê Stores promo metadata (expiry, usage, type)
        ‚Üì
 Response: Valid / Invalid / Discount Amount
